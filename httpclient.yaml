# Sample connectivity configuration for the HTTPClient transport
#
# $Copyright (c) 2016-2017, 2019 Software AG, Darmstadt, Germany and/or Software AG USA Inc., Reston, VA, USA, and/or its subsidiaries and/or its affiliates and/or their licensors.$
# Use, reproduction, transfer, publication or disclosure is prohibited except as specifically provided for in your License Agreement with Software AG


startChains:

  # Create a chain which will take HTTPRequest events and send them to the
  # transport, then classify the responses as either an HTTPResponse or
  # an HTTPError and turn them into those events in the correlator
  http:
    # Use the Map host plugin, so the payload type will be a map<string,data>
    # with the keys being the name of the fields in the event
    - apama.eventMap:
        # Capture events to this channel ...
        subscribeChannels:
          - getRequest
        # ... and send them back to this channel
        defaultChannel: httpdata

    # The mapper does the work to take payload fields expected by the host
    # plugin and turn them into metadata fields needed by the transport
    - mapperCodec:
        # HTTPRequest are outbound only, set the method to GET and copy
        # the URL and ID to metadata
        apamax.httpclient.HTTPRequest:
          towardsTransport:
            copyFrom:
              - metadata.http.path: payload.path
              - metadata.requestId: payload.id
              - payload: payload.path
            defaultValue:
              - metadata.http.method: GET
        # HTTPResponses are success replies, moving the ID, URL
        # and body into payload fields for the return event
        apamax.httpclient.HTTPResponse:
          towardsHost:
            mapFrom:
              - payload.body: payload
              - payload.id: metadata.requestId
        # HTTPErrors are failure replies, which have a status code
        # and message instead of a body
        apamax.httpclient.HTTPError:
          towardsHost:
            mapFrom:
              - payload.message: metadata.http.statusReason
              - payload.id: metadata.requestId
              - payload.code: metadata.http.statusCode

    # The classifier checks the status code to see whether or not it's 
    # an error and assigns the correct event type so that the mapper
    # can correctly map it
    - classifierCodec:
        rules:
          - apamax.httpclient.HTTPResponse:
              - metadata.http.statusCode: 200
          - apamax.httpclient.HTTPError:
              - metadata.http.statusCode:

    # HTTP transport configured with the host to connect to
    - stringCodec
    - httpClient:
       host: "${HOST}"

